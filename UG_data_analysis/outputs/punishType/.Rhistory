})
modellist <- lapply(varlist2, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
return(stargazer(models$coefficients, type = "text"))
})
stargazer(mReact4list2_summ)
stargazer(mReact4list2_summ$coefficients)
sessionInfo()
detach(lmerTest_2.0-36)
detach("lmerTest_2.0-36")
detach("lmerTest")
detach(lmerTest_2.0-36)
detach(lmerTest)
detach("package:lmerTest_2.0-36", unload = TRUE)
detach("package:lmerTest", unload = TRUE)
detach("package:afex", unload = TRUE)
modellist <- lapply(varlist2, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
return(stargazer(models, type = "text"))
})
modellist <- lapply(varlist2, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
return(stargazer(models, type = "text", out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/", i, ".htm")))
})
class(varlist2)
varlist_try <- list("MMSE", "EDUCATION", "IncomePerCapita", "GENDERTEXT", "PROTECT2AGE", "HRSD_NO_SUI", "BIS_NONPLAN", "urgency", "IIP15INTAMBV", "IIP15INTSEN", "IIP15AGRESS", "IRI_EMPATHETIC_CONCERN")
modellist <- lapply(varlist_try, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
return(stargazer(models, type = "text", out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/", i, ".htm")))
})
modellist <- lapply(varlist_try, function(x) {
print(i)
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
#return(stargazer(models, type = "text", out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/", i, ".htm")))
})
rm(modellist)
# try output
modellist <- lapply(varlist_try, function(x) {
print(substitute(i, list(i=as.name(x))))
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
#return(stargazer(models, type = "text", out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/", i, ".htm")))
})
modellist <- lapply(varlist_try, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
return(stargazer(models, type = "text", out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/",
substitute(i, list(i=as.name(x))), ".htm")))
})
modellist <- lapply(varlist_try, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
return(stargazer(models, type = "text",title = paste("scale(Rating) ~ ReappraisalDirection*group4*", substitute(i, list(i=as.name(x))), "+ (1|ID)"), out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/",
substitute(i, list(i=as.name(x))), ".htm")))
})
modellist <- lapply(varlist_try, function(x) {
print(x)
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
})
modellist <- lapply(varlist_try, function(x) {
print(x)
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
return(stargazer(models, type="text", out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/", x, ".htm")))
})
modellist <- lapply(varlist_try, function(x) {
print(x)
models <- lmer(scale(Rating) ~ ReappraisalDirection*group4*x + (1|ID), list(i = x), data = emoRatingScale)
return(stargazer(models, type="text", out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/", x, ".htm")))
})
modellist <- lapply(varlist_try, function(x) {
print(x)
models <- lmer(scale(Rating) ~ ReappraisalDirection*group4*x + (1|ID), list(i = x), data = emoRatingScale)
return(stargazer(models, type="text", out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/", x, ".htm")))
})
modelPun1_individual_summ <- lapply(modelPun1_individual, stargazer(type = "text"))
modelPun1_2way <- lapply(varlist, function(individualFactor) {
models <- glmer(substitute(AcceptOffer ~ PunishingType * fairLR * totalStake +
PunishingType*group4 + fairLR * group4 + totalStake * group4
+ PunishingType*i + (1 | ID/block),
list(i = as.name(individualFactor))),
data = punishMasterScale,
family = binomial,
control = glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun = 2e4)))
return(stargazer(models, type = "text", title = paste("AcceptOffer ~ PunishingType * fairLR * totalStake +  PunishingType*group4 + fairLR * group4 + totalStake * group4 + PunishingType*", x, "+ (1 | ID/block)"),
out = "/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/", x, "*punishType.txt"))
})
modelPun1_2way <- lapply(varlist, function(individualFactor) {
models <- glmer(substitute(AcceptOffer ~ PunishingType * fairLR * totalStake +
PunishingType*group4 + fairLR * group4 + totalStake * group4
+ PunishingType*i + (1 | ID/block),
list(i = as.name(individualFactor))),
data = punishMasterScale,
family = binomial,
control = glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun = 2e4)))
return(stargazer(models, type = "text", title = paste("AcceptOffer ~ PunishingType * fairLR * totalStake +  PunishingType*group4 + fairLR * group4 + totalStake * group4 + PunishingType*", x, "+ (1 | ID/block)"),
out = "/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/pun/", x, "*punishType.txt"))
})
## PunishingType*vars
modelPun1_2way <- lapply(varlist, function(individualFactor) {
models <- glmer(substitute(AcceptOffer ~ PunishingType * fairLR * totalStake +
PunishingType*group4 + fairLR * group4 + totalStake * group4
+ PunishingType*i + (1 | ID/block),
list(i = as.name(individualFactor))),
data = punishMasterScale,
family = binomial,
control = glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun = 2e4)))
return(stargazer(models, type = "text", title = paste("AcceptOffer ~ PunishingType * fairLR * totalStake +  PunishingType*group4 + fairLR * group4 + totalStake * group4 + PunishingType*", x, "+ (1 | ID/block)"),
out = "/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/", x, "*punishType.txt"))
})
modelPun1_2way <- lapply(varlist, function(individualFactor) {
models <- glmer(substitute(AcceptOffer ~ PunishingType * fairLR * totalStake +
PunishingType*group4 + fairLR * group4 + totalStake * group4
+ PunishingType*i + (1 | ID/block),
list(i = as.name(individualFactor))),
data = punishMasterScale,
family = binomial,
control = glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun = 2e4)))
return(stargazer(models, type = "text", title = paste("AcceptOffer ~ PunishingType * fairLR * totalStake +  PunishingType*group4 + fairLR * group4 + totalStake * group4 + PunishingType*", x, "+ (1 | ID/block)",
out = "/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/", x, "*punishType.txt")))
})
modellist <- lapply(varlist_try, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
return(stargazer(models, type = "text",title = paste("scale(Rating) ~ ReappraisalDirection*group4*", x), "+ (1|ID)"), out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/",x, ".htm"))
})
modellist <- lapply(varlist_try, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
return(stargazer(models, type = "text",title = paste("scale(Rating) ~ ReappraisalDirection*group4*", substitute(i, list(i=as.name(x))), "+ (1|ID)"), out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/",
substitute(i, list(i=as.name(x))), ".htm")))
})
modellist <- lapply(varlist_try, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
lvls <- seq(from=min(emoRating$x), to=max(emoRating$x), by=(max(emoRating$x)-min(emoRating$x))/5)
#jpeg("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/punishType*",x, ".jpg")
lsm <- lsmeans(models, "PunishingType", by = c("group5", x), at = list(x = lvls))
return(plot(lsm, horiz = F))
#dev.off()
#return(stargazer(models, type = "text",title = paste("scale(Rating) ~ ReappraisalDirection*group4*", x), "+ (1|ID)"), out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/",x, ".htm"))
})
modellist <- lapply(varlist_try, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
lvls <- seq(from=min(emoRating$x), to=max(emoRating$x), by = (max(emoRating$x)-min(emoRating$x))/5)
#jpeg("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/punishType*",x, ".jpg")
lsm <- lsmeans(models, "PunishingType", by = c("group5", x), at = list(x = lvls))
return(plot(lsm, horiz = F))
#dev.off()
#return(stargazer(models, type = "text",title = paste("scale(Rating) ~ ReappraisalDirection*group4*", x), "+ (1|ID)"), out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/",x, ".htm"))
})
modellist <- lapply(varlist_try, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
intervalLength <- (max(emoRating$x)-min(emoRating$x))/5
lvls <- seq(from=min(emoRating$x), to=max(emoRating$x), by = intervalLength)
#jpeg("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/punishType*",x, ".jpg")
lsm <- lsmeans(models, "PunishingType", by = c("group5", x), at = list(x = lvls))
return(plot(lsm, horiz = F))
#dev.off()
#return(stargazer(models, type = "text",title = paste("scale(Rating) ~ ReappraisalDirection*group4*", x), "+ (1|ID)"), out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/",x, ".htm"))
})
modellist <- lapply(varlist_try, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
#intervalLength <- (max(emoRating$x)-min(emoRating$x))/5
#lvls <- seq(from=min(emoRating$x), to=max(emoRating$x), by = intervalLength)
#jpeg("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/punishType*",x, ".jpg")
#lsm <- lsmeans(models, "PunishingType", by = c("group5", x), at = list(x = lvls))
#return(plot(lsm, horiz = F))
print(max(emoRating$x))
#dev.off()
#return(stargazer(models, type = "text",title = paste("scale(Rating) ~ ReappraisalDirection*group4*", x), "+ (1|ID)"), out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/",x, ".htm"))
})
modellist <- lapply(varlist_try, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
#intervalLength <- (max(emoRating$x)-min(emoRating$x))/5
#lvls <- seq(from=min(emoRating$x), to=max(emoRating$x), by = intervalLength)
#jpeg("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/punishType*",x, ".jpg")
#lsm <- lsmeans(models, "PunishingType", by = c("group5", x), at = list(x = lvls))
#return(plot(lsm, horiz = F))
print(max(emoRatingScale$x))
#dev.off()
#return(stargazer(models, type = "text",title = paste("scale(Rating) ~ ReappraisalDirection*group4*", x), "+ (1|ID)"), out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/",x, ".htm"))
})
modellist <- lapply(varlist_try, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
#intervalLength <- (max(emoRating$x)-min(emoRating$x))/5
#lvls <- seq(from=min(emoRating$x), to=max(emoRating$x), by = intervalLength)
#jpeg("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/punishType*",x, ".jpg")
#lsm <- lsmeans(models, "PunishingType", by = c("group5", x), at = list(x = lvls))
#return(plot(lsm, horiz = F))
print(max(x))
#dev.off()
#return(stargazer(models, type = "text",title = paste("scale(Rating) ~ ReappraisalDirection*group4*", x), "+ (1|ID)"), out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/",x, ".htm"))
})
modellist <- lapply(varlist_try, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
#intervalLength <- (max(emoRating$x)-min(emoRating$x))/5
#lvls <- seq(from=min(emoRating$x), to=max(emoRating$x), by = intervalLength)
#jpeg("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/punishType*",x, ".jpg")
#lsm <- lsmeans(models, "PunishingType", by = c("group5", x), at = list(x = lvls))
#return(plot(lsm, horiz = F))
print(max(i))
#dev.off()
#return(stargazer(models, type = "text",title = paste("scale(Rating) ~ ReappraisalDirection*group4*", x), "+ (1|ID)"), out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/",x, ".htm"))
})
modellist <- lapply(varlist_try, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
#intervalLength <- (max(emoRating$x)-min(emoRating$x))/5
#lvls <- seq(from=min(emoRating$x), to=max(emoRating$x), by = intervalLength)
#jpeg("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/punishType*",x, ".jpg")
#lsm <- lsmeans(models, "PunishingType", by = c("group5", x), at = list(x = lvls))
#return(plot(lsm, horiz = F))
print(i)
#dev.off()
#return(stargazer(models, type = "text",title = paste("scale(Rating) ~ ReappraisalDirection*group4*", x), "+ (1|ID)"), out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/",x, ".htm"))
})
modelPun1_2way <- lapply(varlist, function(individualFactor) {
models <- glmer(substitute(AcceptOffer ~ PunishingType * fairLR * totalStake +
PunishingType*group4 + fairLR * group4 + totalStake * group4
+ PunishingType*i + (1 | ID/block),
list(i = as.name(individualFactor))),
data = punishMasterScale,
family = binomial,
control = glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun = 2e4)))
return(stargazer(models, type = "text", title = paste("AcceptOffer ~ PunishingType * fairLR * totalStake +  PunishingType*group4 + fairLR * group4 + totalStake * group4 + PunishingType*", x, "+ (1 | ID/block)"),
out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/", x, "*punishType.txt")))
})
modellist <- lapply(varlist_try, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
#intervalLength <- (max(emoRating$x)-min(emoRating$x))/5
#lvls <- seq(from=min(emoRating$x), to=max(emoRating$x), by = intervalLength)
#jpeg("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/punishType*",x, ".jpg")
#lsm <- lsmeans(models, "PunishingType", by = c("group5", x), at = list(x = lvls))
#return(plot(lsm, horiz = F))
print(emoRatingScale$x)
#dev.off()
#return(stargazer(models, type = "text",title = paste("scale(Rating) ~ ReappraisalDirection*group4*", x), "+ (1|ID)"), out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/",x, ".htm"))
})
modellist <- lapply(varlist_try, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
#intervalLength <- (max(emoRating$x)-min(emoRating$x))/5
#lvls <- seq(from=min(emoRating$x), to=max(emoRating$x), by = intervalLength)
#jpeg("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/punishType*",x, ".jpg")
#lsm <- lsmeans(models, "PunishingType", by = c("group5", x), at = list(x = lvls))
#return(plot(lsm, horiz = F))
print(emoRating$x)
#dev.off()
#return(stargazer(models, type = "text",title = paste("scale(Rating) ~ ReappraisalDirection*group4*", x), "+ (1|ID)"), out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/",x, ".htm"))
})
modellist <- lapply(varlist_try, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
#intervalLength <- (max(emoRating$x)-min(emoRating$x))/5
#lvls <- seq(from=min(emoRating$x), to=max(emoRating$x), by = intervalLength)
#jpeg("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/punishType*",x, ".jpg")
#lsm <- lsmeans(models, "PunishingType", by = c("group5", x), at = list(x = lvls))
#return(plot(lsm, horiz = F))
print(emoRating[, x])
#dev.off()
#return(stargazer(models, type = "text",title = paste("scale(Rating) ~ ReappraisalDirection*group4*", x), "+ (1|ID)"), out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/",x, ".htm"))
})
modellist <- lapply(varlist_try, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
#intervalLength <- (max(emoRating$x)-min(emoRating$x))/5
#lvls <- seq(from=min(emoRating$x), to=max(emoRating$x), by = intervalLength)
#jpeg("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/punishType*",x, ".jpg")
#lsm <- lsmeans(models, "PunishingType", by = c("group5", x), at = list(x = lvls))
#return(plot(lsm, horiz = F))
print(x)
print(emoRating[, x])
#dev.off()
#return(stargazer(models, type = "text",title = paste("scale(Rating) ~ ReappraisalDirection*group4*", x), "+ (1|ID)"), out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/",x, ".htm"))
})
modellist <- lapply(varlist_try, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
#intervalLength <- (max(emoRating$x)-min(emoRating$x))/5
#lvls <- seq(from=min(emoRating$x), to=max(emoRating$x), by = intervalLength)
#jpeg("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/punishType*",x, ".jpg")
#lsm <- lsmeans(models, "PunishingType", by = c("group5", x), at = list(x = lvls))
#return(plot(lsm, horiz = F))
print(x)
print(max(emoRating[, x]))
#dev.off()
#return(stargazer(models, type = "text",title = paste("scale(Rating) ~ ReappraisalDirection*group4*", x), "+ (1|ID)"), out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/",x, ".htm"))
})
modellist <- lapply(varlist_try, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
#intervalLength <- (max(emoRating$x)-min(emoRating$x))/5
#lvls <- seq(from=min(emoRating$x), to=max(emoRating$x), by = intervalLength)
#jpeg("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/punishType*",x, ".jpg")
#lsm <- lsmeans(models, "PunishingType", by = c("group5", x), at = list(x = lvls))
#return(plot(lsm, horiz = F))
print(x)
vars <- (emoRating[, x])
class(vars)
#dev.off()
#return(stargazer(models, type = "text",title = paste("scale(Rating) ~ ReappraisalDirection*group4*", x), "+ (1|ID)"), out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/",x, ".htm"))
})
modellist <- lapply(varlist_try, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
#intervalLength <- (max(emoRating$x)-min(emoRating$x))/5
#lvls <- seq(from=min(emoRating$x), to=max(emoRating$x), by = intervalLength)
#jpeg("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/punishType*",x, ".jpg")
#lsm <- lsmeans(models, "PunishingType", by = c("group5", x), at = list(x = lvls))
#return(plot(lsm, horiz = F))
print(x)
vars <- (emoRating[, x])
print(class(vars))
#dev.off()
#return(stargazer(models, type = "text",title = paste("scale(Rating) ~ ReappraisalDirection*group4*", x), "+ (1|ID)"), out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/",x, ".htm"))
})
class(unique(emoRating$GENDERTEXT))
modellist <- lapply(varlist_try, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
#intervalLength <- (max(emoRating$x)-min(emoRating$x))/5
#lvls <- seq(from=min(emoRating$x), to=max(emoRating$x), by = intervalLength)
#jpeg("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/punishType*",x, ".jpg")
#lsm <- lsmeans(models, "PunishingType", by = c("group5", x), at = list(x = lvls))
#return(plot(lsm, horiz = F))
print(x)
vars <- (emoRating[, x])
print(class(vars))
if(class(vars) == "numeric"){
intervalLength == (max(vars) - min(vars))/5
}
intervalLength == unique(vars)
print(intervalLength)
#dev.off()
#return(stargazer(models, type = "text",title = paste("scale(Rating) ~ ReappraisalDirection*group4*", x), "+ (1|ID)"), out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/",x, ".htm"))
})
print(emoRating$GENDERTEXT)
print(list(unique(emoRating$GENDERTEXT)))
ls <- list(unique(emoRating$GENDERTEXT))
ls
class(ls)
#intervalLength <- (max(emoRating$x)-min(emoRating$x))/5
#lvls <- seq(from=min(emoRating$x), to=max(emoRating$x), by = intervalLength)
#jpeg("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/punishType*",x, ".jpg")
#lsm <- lsmeans(models, "PunishingType", by = c("group5", x), at = list(x = lvls))
#return(plot(lsm, horiz = F))
print(x)
modellist <- lapply(varlist_try, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
#intervalLength <- (max(emoRating$x)-min(emoRating$x))/5
#lvls <- seq(from=min(emoRating$x), to=max(emoRating$x), by = intervalLength)
#jpeg("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/punishType*",x, ".jpg")
#lsm <- lsmeans(models, "PunishingType", by = c("group5", x), at = list(x = lvls))
#return(plot(lsm, horiz = F))
print(x)
vars <- (emoRating[, x])
print(class(vars))
intervalLength <- ifelse(class(vars) == "numeric", (max(vars) - min(vars))/5, list(unique(vars)))
print(intervalLength)
#dev.off()
#return(stargazer(models, type = "text",title = paste("scale(Rating) ~ ReappraisalDirection*group4*", x), "+ (1|ID)"), out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/",x, ".htm"))
})
print(max(emoRating$MMSE))
print(min(emoRating$MMSE))
print((max(emoRating$MMSE)-min(emoRating$MMSE))/5)
print(max(emoRatingScale$MMSE))
print(min(emoRatingScale$MMSE))
print((max(emoRatingScale$MMSE)-min(emoRating$MMSE))/5)
modellist <- lapply(varlist_try, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
print(x)
vars <- (emoRating[, x])
print(class(vars))
intervalLength <- ifelse(class(vars) == "numeric", (max(vars) - min(vars))/5, list(unique(vars)))
print(intervalLength)
lvls <- seq(from=min(vars), to=max(vars), by = intervalLength)
jpeg(paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/punishType*",x,".jpg"))
lsm <- lsmeans(models, "PunishingType", by = c("group5", x), at = list(x = lvls))
plot(lsm, horiz = F)
dev.off()
return(stargazer(models, type = "text",title = paste("scale(Rating) ~ ReappraisalDirection*group4*", x), "+ (1|ID)"), out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/",x, ".htm"))
})
emoRatingScale$PunishingType
modellist <- lapply(varlist_try, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
print(x)
vars <- (emoRating[, x])
print(class(vars))
intervalLength <- ifelse(class(vars) == "numeric", (max(vars) - min(vars))/5, list(unique(vars)))
print(intervalLength)
lvls <- seq(from=min(vars), to=max(vars), by = intervalLength)
jpeg(paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/punishType*",x,".jpg"))
lsm <- lsmeans(models, "ReappraisalDirection", by = c("group4", x), at = list(x = lvls))
plot(lsm, horiz = F)
dev.off()
return(stargazer(models, type = "text",title = paste("scale(Rating) ~ ReappraisalDirection*group4*", x), "+ (1|ID)"), out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/",x, ".htm"))
})
modellist <- lapply(varlist_try, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
print(x)
vars <- (emoRating[, x])
print(class(vars))
intervalLength <- ifelse(class(vars) == "numeric", (max(vars) - min(vars))/5, list(unique(vars)))
print(intervalLength)
lvls <- seq(from=min(vars), to=max(vars), by = intervalLength)
jpeg(paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/punishType*",x,".jpg"))
lsm <- lsmeans(models, "ReappraisalDirection", by = c("group4", x), at = list(x = lvls))
plot(lsm, horiz = F)
dev.off()
#return(stargazer(models, type = "text",title = paste("scale(Rating) ~ ReappraisalDirection*group4*", x), "+ (1|ID)"), out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/",x, ".htm"))
})
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
modellist <- lapply(varlist_try, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
#return(stargazer(models, type = "text",title = paste("scale(Rating) ~ ReappraisalDirection*group4*", x), "+ (1|ID)"), out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/",x, ".htm"))
})
modellist <- lapply(varlist_try, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
print(x)
vars <- (emoRating[, x])
print(class(vars))
intervalLength <- ifelse(class(vars) == "numeric", (max(vars) - min(vars))/5, list(unique(vars)))
print(intervalLength)
lvls <- ifelse(class(vars) == "numeric", seq(from=min(vars), to=max(vars), by = intervalLength),
intervalLength)
#lvls <- seq(from=min(vars), to=max(vars), by = intervalLength)
jpeg(paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/TRIAL*",x,".jpg"))
lsm <- lsmeans(models, "ReappraisalDirection", by = c("group4", x), at = list(x = lvls))
plot(lsm, horiz = F)
dev.off()
#return(stargazer(models, type = "text",title = paste("scale(Rating) ~ ReappraisalDirection*group4*", x), "+ (1|ID)"), out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/",x, ".htm"))
})
emoRating$BIS_NONPLAN
varlist_try <- list("MMSE", "EDUCATION", "IncomePerCapita", "GENDERTEXT", "PROTECT2AGE", "HRSD_NO_SUI", "IIP15INTSEN", "IIP15AGRESS", "IRI_EMPATHETIC_CONCERN")
modellist <- lapply(varlist_try, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
print(x)
vars <- (emoRating[, x])
print(class(vars))
intervalLength <- ifelse(class(vars) == "numeric", (max(vars) - min(vars))/5, list(unique(vars)))
print(intervalLength)
lvls <- ifelse(class(vars) == "numeric", seq(from=min(vars), to=max(vars), by = intervalLength),
intervalLength)
#lvls <- seq(from=min(vars), to=max(vars), by = intervalLength)
jpeg(paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/TRIAL*",x,".jpg"))
lsm <- lsmeans(models, "ReappraisalDirection", by = c("group4", x), at = list(x = lvls))
plot(lsm, horiz = F)
dev.off()
#return(stargazer(models, type = "text",title = paste("scale(Rating) ~ ReappraisalDirection*group4*", x), "+ (1|ID)"), out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/",x, ".htm"))
})
modellist <- lapply(varlist_try, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
print(x)
vars <- (emoRating[, x])
print(class(vars))
intervalLength <- ifelse(class(vars) == "numeric", (max(vars) - min(vars))/5, list(unique(vars)))
print(intervalLength)
lvls <- ifelse(class(vars) == "numeric", seq(from=min(vars), to=max(vars), by = intervalLength),
intervalLength)
#lvls <- seq(from=min(vars), to=max(vars), by = intervalLength)
jpeg(paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/TRIAL*",x,".jpg"))
lsm <- lsmeans(models, "ReappraisalDirection", by = c("group4", x), at = list(x = lvls))
plot(lsm, horiz = F)
return()
#return(stargazer(models, type = "text",title = paste("scale(Rating) ~ ReappraisalDirection*group4*", x), "+ (1|ID)"), out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/",x, ".htm"))
})
is.na(emoRating$IIP15INTSEN)
emoRating$IIP15INTSEN
max(emoRating$IIP15INTSEN)
class(emoRating$IIP15INTSEN)
min(emoRating$IIP15INTSEN)
unique(emoRating$IIP15INTSEN)
anyNA(emoRating$IIP15INTSEN)
any(is.na(emoRating$IIP15INTSEN))
any(is.na(emoRating$IIP15AGRESS))
any(is.na(emoRating$IIP15INTAMBV))
varlist_try <- list("MMSE", "EDUCATION", "IncomePerCapita", "GENDERTEXT", "PROTECT2AGE", "HRSD_NO_SUI", "IRI_EMPATHETIC_CONCERN")
modellist <- lapply(varlist_try, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
print(x)
vars <- (emoRating[, x])
print(class(vars))
intervalLength <- ifelse(class(vars) == "numeric", (max(vars) - min(vars))/5, list(unique(vars)))
print(intervalLength)
lvls <- ifelse(class(vars) == "numeric", seq(from=min(vars), to=max(vars), by = intervalLength),
intervalLength)
#lvls <- seq(from=min(vars), to=max(vars), by = intervalLength)
jpeg(paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/TRIAL*",x,".jpg"))
lsm <- lsmeans(models, "ReappraisalDirection", by = c("group4", x), at = list(x = lvls))
plot(lsm, horiz = F)
return()
#return(stargazer(models, type = "text",title = paste("scale(Rating) ~ ReappraisalDirection*group4*", x), "+ (1|ID)"), out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/",x, ".htm"))
})
any(is.na(emoRating$IRI_EMPATHETIC_CONCERN))
varlist_try <- list("MMSE", "EDUCATION", "IncomePerCapita", "GENDERTEXT", "PROTECT2AGE", "HRSD_NO_SUI")
modellist <- lapply(varlist_try, function(x) {
models <- lmer(substitute(scale(Rating) ~ ReappraisalDirection*group4*i + (1|ID), list(i = as.name(x))), data = emoRatingScale)
print(x)
vars <- (emoRating[, x])
print(class(vars))
intervalLength <- ifelse(class(vars) == "numeric", (max(vars) - min(vars))/5, list(unique(vars)))
print(intervalLength)
lvls <- ifelse(class(vars) == "numeric", seq(from=min(vars), to=max(vars), by = intervalLength),
intervalLength)
#lvls <- seq(from=min(vars), to=max(vars), by = intervalLength)
jpeg(paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/TRIAL*",x,".jpg"))
lsm <- lsmeans(models, "ReappraisalDirection", by = c("group4", x), at = list(x = lvls))
plot(lsm, horiz = F)
return()
#return(stargazer(models, type = "text",title = paste("scale(Rating) ~ ReappraisalDirection*group4*", x), "+ (1|ID)"), out = paste("/Volumes/LAB/Suicide_UG/UG_data_analysis/outputs/punishType/",x, ".htm"))
})
lsm <- lsmeans(modelPun3_mg, "PunishingType", by = c("MMSE", "group4"), at = list(MMSE = c(26,28,30)))
plot(lsm, horiz = F) +
theme(axis.text.x=element_text(angle=90, hjust=1)) +
theme(text = element_text(size=8)) +
facet_grid(~ c("MMSE", "group4"))
lsm <- lsmeans(modelPun3_mg, "PunishingType", by = c("MMSE", "group4"), at = list(MMSE = c(26,28,30)))
plot(lsm, horiz = F) +
theme(axis.text.x=element_text(angle=90, hjust=1)) +
theme(text = element_text(size=8)) +
facet_grid(~ MMSE+group4)
plt<-plot(lsm, horiz = F) +
theme(axis.text.x=element_text(angle=90, hjust=1)) +
theme(text = element_text(size=8)) +
facet_grid(~ MMSE+group4)
print(plt)
