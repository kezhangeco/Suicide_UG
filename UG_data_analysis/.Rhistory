library(bitops)
library(nloptr)
library(optimx)
library(dfoptim)
library(emmeans)
library(afex)
library(usdm)
library(car)
library(glmulti)
library(rJava)
print(m7)
print(m4)
print(m2)
print(m1)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
library(lme4)
library(ggplot2)
library(GGally)
library(plyr)
library(Matrix)
library(readxl)
library(reshape2)
library(numDeriv)
library(MuMIn)
library(glmulti)
library(rJava)
m1 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection + scale(totalStake) + Fairness_score + group4, level = 2, fitfunction = glmer.glmulti, random = "+ (1|ID)", method = "g", data = allData)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
library(lme4)
library(ggplot2)
library(GGally)
library(plyr)
library(Matrix)
library(readxl)
library(reshape2)
library(numDeriv)
library(MuMIn)
library(glmulti)
library(rJava)
glmer.glmulti <- function(formula, data, random = ""){
glmer(paste(deparse(formula), random), data = data, family = binomial, control = glmerControl(calc.derivs = FALSE))
}
m1 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection + scale(totalStake) + Fairness_score + group4, level = 2, fitfunction = glmer.glmulti, random = "+ (1|ID)", method = "g", data = allData)
m1_1 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection * scale(totalStake) * Fairness_score * group4, level = 2, fitfunction = glmer.glmulti, random = "+ (1|ID)", method = "g", data = allData)
summary(m1)
summary(m1_1)
summary(m2)
m2 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection + scale(totalStake) + Fairness_score + group4, level = 2, fitfunction = glmer.glmulti, random = "+ (ReappraisalDirection|ID)", method = "g", data = allData)
m2_1 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection * scale(totalStake) * Fairness_score * group4, level = 2, fitfunction = glmer.glmulti, random = "+ (ReappraisalDirection|ID)", method = "g", data = allData)
summary(m2)
summary(m2_1)
m3 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection * scale(totalStake) * Fairness_score * group4, level = 2, fitfunction = glmer.glmulti, random = "+ (totalStake|ID)", method = "d", data = allData)
m5 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection * scale(totalStake) * Fairness_score * group4, level = 2, fitfunction = glmer.glmulti, random = "+ (totalStake|ID) + (ReappraisalDirection|ID)", method = "d", data = allData)
m6 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection * scale(totalStake) * Fairness_score * group4, level = 2, fitfunction = glmer.glmulti, random = "+ (Fairness_score|ID) + (ReappraisalDirection|ID)", method = "d", data = allData)
summary(m3)
summary(m2)
summary(m5)
m5 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection * scale(totalStake) * Fairness_score * group4, level = 2, fitfunction = glmer.glmulti, random = "+ (totalStake|ID) + (ReappraisalDirection|ID)", method = "d", data = allData)
m3 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection * scale(totalStake) * Fairness_score * group4, level = 2, fitfunction = glmer.glmulti, random = "+ (totalStake|ID)", method = "g", data = allData)
m3 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection * scale(totalStake) * Fairness_score * group4, level = 2, fitfunction = glmer.glmulti, random = "+ (totalStake|ID)", method = "g", data = allData)
summary(m3)
summary(m5)
m5 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection * scale(totalStake) * Fairness_score * group4, level = 2, fitfunction = glmer.glmulti, random = "+ (totalStake|ID) + (ReappraisalDirection|ID)", method = "g", data = allData)
The models include the demographics variables are imbalanced between the clinical groups: *education*, *household income*, *MMSE*, *SSI BL CURRENT* (only for psychiatric groups).
```{r}
m13 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection * scale(totalStake) * Fairness_score * group4 * scale(EDUCATION) * scale(HouseholdIncome) * scale(MMSE), exclude = c("MMSE:HouseholdIncome"), level = 2, fitfunction = glmer.glmulti, random = "+ (1|ID)", method = "d", data = allData)
```
## remove education
```{r}
m_edu <- glmulti(allData$AcceptOffer ~ ReappraisalDirection * scale(totalStake) * Fairness_score * group4 * scale(HouseholdIncome) * scale(MMSE), exclude = c("MMSE:HouseholdIncome"), level = 2, fitfunction = glmer.glmulti, random = "+ (1|ID)", method = "d", data = allData)
```
## remove income
```{r}
m_income <- glmulti(allData$AcceptOffer ~ ReappraisalDirection * scale(totalStake) * Fairness_score * group4 * scale(EDUCATION) *  scale(MMSE), level = 2, fitfunction = glmer.glmulti, random = "+ (1|ID)", method = "d", data = allData)
```
## remove MMSE
```{r}
m_mmse <- glmulti(allData$AcceptOffer ~ ReappraisalDirection * scale(totalStake) * Fairness_score * group4 * scale(EDUCATION) * scale(HouseholdIncome), level = 2, fitfunction = glmer.glmulti, random = "+ (1|ID)", method = "d", data = allData)
```
# pairwise interaction effects
```{r}
m_pairInter1 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection + scale(totalStake) + Fairness_score + group4 + scale(EDUCATION) + scale(HouseholdIncome) + scale(MMSE), exclude = c("MMSE:HouseholdIncome"), level = 2, fitfunction = glmer.glmulti, random = "+ (1|ID)", method = "g", data = allData)
m_pairInter2 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection + scale(totalStake) + Fairness_score + group4 + scale(EDUCATION) + scale(HouseholdIncome) + scale(MMSE), exclude = c("MMSE:HouseholdIncome"), level = 2, fitfunction = glmer.glmulti, random = "+ (Fairness_score|ID)", method = "g", data = allData)
m_pairInter3 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection + scale(totalStake) + Fairness_score + group4 + scale(EDUCATION) + scale(HouseholdIncome) + scale(MMSE), exclude = c("MMSE:HouseholdIncome"), level = 2, fitfunction = glmer.glmulti, random = "+ (totalStake|ID)", method = "g", data = allData)
m_pairInter4 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection + scale(totalStake) + Fairness_score + group4 + scale(EDUCATION) + scale(HouseholdIncome) + scale(MMSE), exclude = c("MMSE:HouseholdIncome"), level = 2, fitfunction = glmer.glmulti, random = "+ (ReappraisalDirection|ID)", method = "g", data = allData)
m_pairInter5 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection + scale(totalStake) + Fairness_score + group4 + scale(EDUCATION) + scale(HouseholdIncome) + scale(MMSE), exclude = c("MMSE:HouseholdIncome"), level = 2, fitfunction = glmer.glmulti, random = "+ (ReappraisalDirection|ID) + (totalStake|ID)", method = "g", data = allData)
m_pairInter6 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection + scale(totalStake) + Fairness_score + group4 + scale(EDUCATION) + scale(HouseholdIncome) + scale(MMSE), exclude = c("MMSE:HouseholdIncome"), level = 2, fitfunction = glmer.glmulti, random = "+ (Fairness_score|ID) + (totalStake|ID)", method = "g", data = allData)
m_pairInter7 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection + scale(totalStake) + Fairness_score + group4 + scale(EDUCATION) + scale(HouseholdIncome) + scale(MMSE), exclude = c("MMSE:HouseholdIncome"), level = 2, fitfunction = glmer.glmulti, random = "+ (Fairness_score|ID) + (ReappraisalDirection|ID)", method = "g", data = allData)
m_pairInter8 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection + scale(totalStake) + Fairness_score + group4 + scale(EDUCATION) + scale(HouseholdIncome) + scale(MMSE), exclude = c("MMSE:HouseholdIncome"), level = 2, fitfunction = glmer.glmulti, random = "+ (Fairness_score|ID) + (totalStake|ID) + (ReappraisalDirection|ID)", method = "g", data = allData)
print(m_pairInter1)
print(m_pairInter2)
print(m_pairInter3)
print(m_pairInter4)
print(m_pairInter5)
print(m_pairInter6)
print(m_pairInter7)
print(m_pairInter8)
```
# Longitudianl models
Because trial number influence participants choice in the baseline data. Here we run longitudinal models with time variables $Trial_Number$.
```{r baseline data}
allData$framingContext <- NA
allData$framingContext[allData$ReappraisalDirection == "punish"] <- "framing"
allData$framingContext[allData$ReappraisalDirection == "empathy"] <- "framing"
allData$framingContext[allData$ReappraisalDirection == "baseline"] <- "baseline"
baselineData <- subset(allData, allData$framingContext == "baseline")
```
## with various random effects
```{r}
m_l1 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection * scale(totalStake) * Fairness_score * group4 * scale(EDUCATION) * scale(HouseholdIncome) * scale(MMSE) + scale(merged_trial), exclude = c("MMSE:HouseholdIncome"), level = 2, fitfunction = glmer.glmulti, random = "+ (1|ID)", method = "g", data = allData)
m_l2 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection * scale(totalStake) * Fairness_score * group4 * scale(EDUCATION) * scale(HouseholdIncome) * scale(MMSE) + scale(merged_trial), exclude = c("MMSE:HouseholdIncome"), level = 2, fitfunction = glmer.glmulti, random = "+ (merged_trial|ID)", method = "g", data = allData)
m_l3 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection * scale(totalStake) * Fairness_score * group4 * scale(EDUCATION) * scale(HouseholdIncome) * scale(MMSE) + scale(merged_trial), exclude = c("MMSE:HouseholdIncome"), level = 2, fitfunction = glmer.glmulti, random = "+ (1|ID) + (0 + merged_trial|ID)", method = "g", data = allData)
m_l1_1 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection * scale(totalStake) * Fairness_score * group4 * scale(EDUCATION) * scale(HouseholdIncome) * scale(MMSE), exclude = c("MMSE:HouseholdIncome"), level = 2, fitfunction = glmer.glmulti, random = "+ (1|ID)", method = "g", data = allData)
m_l2_1 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection * scale(totalStake) * Fairness_score * group4 * scale(EDUCATION) * scale(HouseholdIncome) * scale(MMSE), exclude = c("MMSE:HouseholdIncome"), level = 2, fitfunction = glmer.glmulti, random = "+ (merged_trial|ID)", method = "g", data = allData)
m_l3_1 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection * scale(totalStake) * Fairness_score * group4 * scale(EDUCATION) * scale(HouseholdIncome) * scale(MMSE), exclude = c("MMSE:HouseholdIncome"), level = 2, fitfunction = glmer.glmulti, random = "+ (1|ID) + (0 + merged_trial|ID)", method = "g", data = allData)
anova(m_l1, m_l1_1)
anova(m_l2, m_l2_1)
anova(m_l3, m_l3_1)
print(m_l1)
print(m_l2)
print(m_l3)
print(m_l1_1)
print(m_l2_1)
print(m_l3_1)
## ReappraisalDirection x total stake x group4
```{r}
m12 <- glmer(allData$AcceptOffer ~ scale(totalStake) * ReappraisalDirection * group4 + Fairness_score + (Fairness_score|ID) + (totalStake|ID) + (ReappraisalDirection|ID), data = allData, family = "binomial")
summary(m12)
knit(UG_data_analysis_hypothesis.Rmd)
```
# Level 2 predictors
The models include the demographics variables are imbalanced between the clinical groups: *education*, *household income*, *MMSE*, *SSI BL CURRENT* (only for psychiatric groups).
```{r}
m13 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection * scale(totalStake) * Fairness_score * group4 * scale(EDUCATION) * scale(HouseholdIncome) * scale(MMSE), exclude = c("MMSE:HouseholdIncome"), level = 2, fitfunction = glmer.glmulti, random = "+ (1|ID)", method = "d", data = allData)
```
## remove education
```{r}
m_edu <- glmulti(allData$AcceptOffer ~ ReappraisalDirection * scale(totalStake) * Fairness_score * group4 * scale(HouseholdIncome) * scale(MMSE), exclude = c("MMSE:HouseholdIncome"), level = 2, fitfunction = glmer.glmulti, random = "+ (1|ID)", method = "d", data = allData)
```
## remove income
```{r}
m_income <- glmulti(allData$AcceptOffer ~ ReappraisalDirection * scale(totalStake) * Fairness_score * group4 * scale(EDUCATION) *  scale(MMSE), level = 2, fitfunction = glmer.glmulti, random = "+ (1|ID)", method = "d", data = allData)
```
## remove MMSE
```{r}
m_mmse <- glmulti(allData$AcceptOffer ~ ReappraisalDirection * scale(totalStake) * Fairness_score * group4 * scale(EDUCATION) * scale(HouseholdIncome), level = 2, fitfunction = glmer.glmulti, random = "+ (1|ID)", method = "d", data = allData)
# pairwise interaction effects
```{r}
m_pairInter1 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection + scale(totalStake) + Fairness_score + group4 + scale(EDUCATION) + scale(HouseholdIncome) + scale(MMSE), exclude = c("MMSE:HouseholdIncome"), level = 2, fitfunction = glmer.glmulti, random = "+ (1|ID)", method = "g", data = allData)
m_pairInter2 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection + scale(totalStake) + Fairness_score + group4 + scale(EDUCATION) + scale(HouseholdIncome) + scale(MMSE), exclude = c("MMSE:HouseholdIncome"), level = 2, fitfunction = glmer.glmulti, random = "+ (Fairness_score|ID)", method = "g", data = allData)
m_pairInter3 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection + scale(totalStake) + Fairness_score + group4 + scale(EDUCATION) + scale(HouseholdIncome) + scale(MMSE), exclude = c("MMSE:HouseholdIncome"), level = 2, fitfunction = glmer.glmulti, random = "+ (totalStake|ID)", method = "g", data = allData)
m_pairInter4 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection + scale(totalStake) + Fairness_score + group4 + scale(EDUCATION) + scale(HouseholdIncome) + scale(MMSE), exclude = c("MMSE:HouseholdIncome"), level = 2, fitfunction = glmer.glmulti, random = "+ (ReappraisalDirection|ID)", method = "g", data = allData)
m_pairInter5 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection + scale(totalStake) + Fairness_score + group4 + scale(EDUCATION) + scale(HouseholdIncome) + scale(MMSE), exclude = c("MMSE:HouseholdIncome"), level = 2, fitfunction = glmer.glmulti, random = "+ (ReappraisalDirection|ID) + (totalStake|ID)", method = "g", data = allData)
m_pairInter6 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection + scale(totalStake) + Fairness_score + group4 + scale(EDUCATION) + scale(HouseholdIncome) + scale(MMSE), exclude = c("MMSE:HouseholdIncome"), level = 2, fitfunction = glmer.glmulti, random = "+ (Fairness_score|ID) + (totalStake|ID)", method = "g", data = allData)
m_pairInter7 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection + scale(totalStake) + Fairness_score + group4 + scale(EDUCATION) + scale(HouseholdIncome) + scale(MMSE), exclude = c("MMSE:HouseholdIncome"), level = 2, fitfunction = glmer.glmulti, random = "+ (Fairness_score|ID) + (ReappraisalDirection|ID)", method = "g", data = allData)
m_pairInter8 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection + scale(totalStake) + Fairness_score + group4 + scale(EDUCATION) + scale(HouseholdIncome) + scale(MMSE), exclude = c("MMSE:HouseholdIncome"), level = 2, fitfunction = glmer.glmulti, random = "+ (Fairness_score|ID) + (totalStake|ID) + (ReappraisalDirection|ID)", method = "g", data = allData)
print(m_pairInter1)
print(m_pairInter2)
print(m_pairInter3)
print(m_pairInter4)
print(m_pairInter5)
print(m_pairInter6)
print(m_pairInter7)
print(m_pairInter8)
```
# Longitudianl models
Because trial number influence participants choice in the baseline data. Here we run longitudinal models with time variables $Trial_Number$.
```{r baseline data}
allData$framingContext <- NA
allData$framingContext[allData$ReappraisalDirection == "punish"] <- "framing"
allData$framingContext[allData$ReappraisalDirection == "empathy"] <- "framing"
allData$framingContext[allData$ReappraisalDirection == "baseline"] <- "baseline"
baselineData <- subset(allData, allData$framingContext == "baseline")
```
## with various random effects
```{r}
m_l1 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection * scale(totalStake) * Fairness_score * group4 * scale(EDUCATION) * scale(HouseholdIncome) * scale(MMSE) + scale(merged_trial), exclude = c("MMSE:HouseholdIncome"), level = 2, fitfunction = glmer.glmulti, random = "+ (1|ID)", method = "g", data = allData)
m_l2 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection * scale(totalStake) * Fairness_score * group4 * scale(EDUCATION) * scale(HouseholdIncome) * scale(MMSE) + scale(merged_trial), exclude = c("MMSE:HouseholdIncome"), level = 2, fitfunction = glmer.glmulti, random = "+ (merged_trial|ID)", method = "g", data = allData)
m_l3 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection * scale(totalStake) * Fairness_score * group4 * scale(EDUCATION) * scale(HouseholdIncome) * scale(MMSE) + scale(merged_trial), exclude = c("MMSE:HouseholdIncome"), level = 2, fitfunction = glmer.glmulti, random = "+ (1|ID) + (0 + merged_trial|ID)", method = "g", data = allData)
m_l1_1 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection * scale(totalStake) * Fairness_score * group4 * scale(EDUCATION) * scale(HouseholdIncome) * scale(MMSE), exclude = c("MMSE:HouseholdIncome"), level = 2, fitfunction = glmer.glmulti, random = "+ (1|ID)", method = "g", data = allData)
m_l2_1 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection * scale(totalStake) * Fairness_score * group4 * scale(EDUCATION) * scale(HouseholdIncome) * scale(MMSE), exclude = c("MMSE:HouseholdIncome"), level = 2, fitfunction = glmer.glmulti, random = "+ (merged_trial|ID)", method = "g", data = allData)
m_l3_1 <- glmulti(allData$AcceptOffer ~ ReappraisalDirection * scale(totalStake) * Fairness_score * group4 * scale(EDUCATION) * scale(HouseholdIncome) * scale(MMSE), exclude = c("MMSE:HouseholdIncome"), level = 2, fitfunction = glmer.glmulti, random = "+ (1|ID) + (0 + merged_trial|ID)", method = "g", data = allData)
anova(m_l1, m_l1_1)
anova(m_l2, m_l2_1)
anova(m_l3, m_l3_1)
print(m_l1)
print(m_l2)
print(m_l3)
print(m_l1_1)
print(m_l2_1)
print(m_l3_1)
```
knitr::opts_chunk$set(echo = TRUE)
library(lme4)
library(ggplot2)
library(GGally)
library(plyr)
library(Matrix)
library(readxl)
library(reshape2)
library(numDeriv)
library(MuMIn)
library(glmulti)
library(rJava)
library(mice)
# import data
task <- read.csv("/home/kzhang5/scratch/ug_all_task_data.csv")
# import data
#task <- read.csv("/home/kzhang5/scratch/ug_all_task_data.csv")
#demo <- read_excel("/home/kzhang5/scratch/ug_demog.xlsx")
#question <- read_excel("/home/kzhang5/scratch/ug_questionnaire.xlsx")
task <- read.csv("/Users/kezhang/ownCloud/Suicide_UG/UG_clean_updated/ug_all_task_data.csv")
demo <- read_excel("/Users/kezhang/ownCloud/Suicide_UG/UG_clean_updated/ug_demog.xlsx")
question <- read_excel("/Users/kezhang/ownCloud/Suicide_UG/UG_clean_updated/ug_questionnaire.xlsx")
demoQuestion <- merge(demo, question, on = "ID")
allData <- merge(task, demoQuestion, on = "ID")
allData$totalStake <- allData$PlayerProposedAmount + allData$OpponentProposedAmount
allData <- rename(allData, c("HOUSEHOLD INCOME" = "HouseholdIncome", "HRSD NO SUI" = "HRSD_NO_SUI", "PER CAPITA INCOME" = "IncomePerCapita", "MMSE TOTAL" = "MMSE"))
allData$Fairness_score <- as.factor(allData$Fairness_score)
allData$ID <- as.factor(allData$ID)
allData$AcceptOffer <- as.factor(allData$AcceptOffer)
# block number
allData$framingContext <- NA
allData$framingContext[allData$ReappraisalDirection == "punish"] <- "framing"
allData$framingContext[allData$ReappraisalDirection == "empathy"] <- "framing"
allData$framingContext[allData$ReappraisalDirection == "baseline"] <- "baseline"
allData[missingVar, ]
pMiss <- function(x){sum(is.na(x))/length(x)*100}
missingVar <- c('BIS_NONPLAN', 'IIP15INTAMBV', 'EXIT')
apply(allData[missingVar], 2, pMiss)
allData[missingVar, ]
missingDF <- allData[, missingVar]
print(mis)
print(missingDF)
missingDF_impute <- mice(missingDF, m = 5, meth = "pmm", maxit = 50)
missingDF_impute$imp$BIS_NONPLAN
summary(missingDF_impute)
print(summary(missingDF_impute))
print(missingDF_impute)
missingDF_impute$imp$BIS_NONPLAN
print(missingDF_impute)
missingDF_impute$imp$BIS_NONPLAN
allDataComplete <- complete(missingDF_impute,1)
missingDF_impute$imp$BIS_NONPLAN
allDataComplete <- complete(missingDF_impute,1)
summary(allDataComplete)
print(summary(allDataComplete))
View(allDataComplete)
missngVar_complete <- complete(missingDF_impute,1)
print(summary(missngVar_complete))
missingVar <- c('ID', 'BIS_NONPLAN', 'IIP15INTAMBV', 'EXIT')
apply(allData[missingVar], 2, pMiss)
pMiss <- function(x){sum(is.na(x))/length(x)*100}
missingVar <- c('ID', 'BIS_NONPLAN', 'IIP15INTAMBV', 'EXIT')
apply(allData[missingVar], 2, pMiss)
print(missingVar)
pMiss <- function(x){sum(is.na(x))/length(x)*100}
missingVar <- c('ID', 'BIS_NONPLAN', 'IIP15INTAMBV', 'EXIT')
apply(allData[missingVar], 2, pMiss)
print(missingVar)
print(missingDf)
missingDF <- allData[, missingVar]
print(missingDF)
# check how many percentage of data is missing
pMiss <- function(x){sum(is.na(x))/length(x)*100}
missingVar <- c('ID', 'BIS_NONPLAN', 'IIP15INTAMBV', 'EXIT')
apply(allData[missingVar], 2, pMiss)
missingDF <- allData[, missingVar]
missingDF_impute <- mice(missingDF, m = 5, meth = "pmm", maxit = 50)
missingDF_impute$imp$ID
print(missingDF_impute$imp$ID)
missngVar_complete <- complete(missingDF_impute,1)
print(summary(missngVar_complete))
print(missngVar_complete)
View(allData)
View(allDataComplete)
View(missingDF)
pMiss <- function(x){sum(is.na(x))/length(x)*100}
missingVar <- c('BIS_NONPLAN', 'IIP15INTAMBV', 'EXIT')
apply(allData[missingVar], 2, pMiss)
missingDF <- allData[, missingVar]
print(missingDF)
pMiss <- function(x){sum(is.na(x))/length(x)*100}
missingVar <- c('BIS_NONPLAN', 'IIP15INTAMBV', 'EXIT')
apply(allData[missingVar], 2, pMiss)
print(allData[missingVar])
missingDF <- allData[, missingVar]
print(allData[missingVar])
print(missingDF)
md.pattern(allData[missingVar])
print(md.pattern(allData[missingVar]))
allData <- sort(allData)
allData <- sort(allData$ID)
allData <- sort(allData$ID)
allData <- sort(allData$ID)
allData <- sort(ID)
print(summary(missngVar_complete))
print(missngVar_complete)
missingDF_impute <- mice(missingDF, m = 5, meth = "pmm", maxit = 50)
knitr::opts_chunk$set(echo = TRUE)
library(lme4)
library(ggplot2)
library(GGally)
library(plyr)
library(Matrix)
library(readxl)
library(reshape2)
library(numDeriv)
library(MuMIn)
library(glmulti)
library(rJava)
library(mice)
missingDF_impute <- mice(missingDF, m = 5, meth = "pmm", maxit = 50)
missngVar_complete <- complete(missingDF_impute,1)
bis <- missingVar_complete$BIS_NONPLAN - allData$BIS_NONPLAN
missngVar_complete <- complete(missingDF_impute,1)
missingVar_complete <- complete(missingDF_impute,1)
bis <- missingVar_complete$BIS_NONPLAN - allData$BIS_NONPLAN
View(missingVar_complete)
bis <- missingVar_complete['BIS_NONPLAN'] - allData$BIS_NONPLAN
# import data
#task <- read.csv("/home/kzhang5/scratch/ug_all_task_data.csv")
#demo <- read_excel("/home/kzhang5/scratch/ug_demog.xlsx")
#question <- read_excel("/home/kzhang5/scratch/ug_questionnaire.xlsx")
task <- read.csv("/Users/kezhang/ownCloud/Suicide_UG/UG_clean_updated/ug_all_task_data.csv")
demo <- read_excel("/Users/kezhang/ownCloud/Suicide_UG/UG_clean_updated/ug_demog.xlsx")
question <- read_excel("/Users/kezhang/ownCloud/Suicide_UG/UG_clean_updated/ug_questionnaire.xlsx")
demoQuestion <- merge(demo, question, on = "ID")
allData <- merge(task, demoQuestion, on = "ID")
allData$totalStake <- allData$PlayerProposedAmount + allData$OpponentProposedAmount
allData <- rename(allData, c("HOUSEHOLD INCOME" = "HouseholdIncome", "HRSD NO SUI" = "HRSD_NO_SUI", "PER CAPITA INCOME" = "IncomePerCapita", "MMSE TOTAL" = "MMSE"))
allData$Fairness_score <- as.factor(allData$Fairness_score)
allData$ID <- as.factor(allData$ID)
allData$AcceptOffer <- as.factor(allData$AcceptOffer)
# block number
allData$framingContext <- NA
allData$framingContext[allData$ReappraisalDirection == "punish"] <- "framing"
allData$framingContext[allData$ReappraisalDirection == "empathy"] <- "framing"
allData$framingContext[allData$ReappraisalDirection == "baseline"] <- "baseline"
allData$
# compare with and without missing vars
bis <- missingVar_complete['BIS_NONPLAN'] - allData$BIS_NONPLAN
iip <- missingVar_complete$IIP15INTAMBV - allData$IIP15INTAMBV
pMiss <- function(x){sum(is.na(x))/length(x)*100}
missingVar <- c('BIS_NONPLAN', 'IIP15INTAMBV', 'EXIT')
missingDF <- allData[, missingVar]
apply(allData[missingVar], 2, pMiss)
print(md.pattern(allData[missingVar]))
missingDF_impute <- mice(missingDF, m = 5, meth = "pmm", maxit = 50)
pMiss <- function(x){sum(is.na(x))/length(x)*100}
missingVar <- c('BIS_NONPLAN', 'IIP15INTAMBV', 'EXIT')
missingDF <- allData[, missingVar]
apply(allData[missingVar], 2, pMiss)
print(md.pattern(allData[missingVar]))
# impute data
missingDF_impute <- mice(missingDF, m = 5, meth = "pmm", maxit = 50)
# import data
#task <- read.csv("/home/kzhang5/scratch/ug_all_task_data.csv")
#demo <- read_excel("/home/kzhang5/scratch/ug_demog.xlsx")
#question <- read_excel("/home/kzhang5/scratch/ug_questionnaire.xlsx")
task <- read.csv("/Users/kezhang/ownCloud/Suicide_UG/UG_clean_updated/ug_all_task_data.csv")
demo <- read_excel("/Users/kezhang/ownCloud/Suicide_UG/UG_clean_updated/ug_demog.xlsx")
knitr::opts_chunk$set(echo = TRUE)
library(lme4)
library(ggplot2)
library(GGally)
library(plyr)
library(Matrix)
library(readxl)
library(reshape2)
library(numDeriv)
library(MuMIn)
library(glmulti)
library(rJava)
library(mice)
# import data
#task <- read.csv("/home/kzhang5/scratch/ug_all_task_data.csv")
#demo <- read_excel("/home/kzhang5/scratch/ug_demog.xlsx")
#question <- read_excel("/home/kzhang5/scratch/ug_questionnaire.xlsx")
task <- read.csv("/Users/kezhang/ownCloud/Suicide_UG/UG_clean_updated/ug_all_task_data.csv")
demo <- read_excel("/Users/kezhang/ownCloud/Suicide_UG/UG_clean_updated/ug_demog.xlsx")
question <- read_excel("/Users/kezhang/ownCloud/Suicide_UG/UG_clean_updated/ug_questionnaire.xlsx")
demoQuestion <- merge(demo, question, on = "ID")
allData <- merge(task, demoQuestion, on = "ID")
allData$totalStake <- allData$PlayerProposedAmount + allData$OpponentProposedAmount
allData <- rename(allData, c("HOUSEHOLD INCOME" = "HouseholdIncome", "HRSD NO SUI" = "HRSD_NO_SUI", "PER CAPITA INCOME" = "IncomePerCapita", "MMSE TOTAL" = "MMSE"))
allData$Fairness_score <- as.factor(allData$Fairness_score)
allData$ID <- as.factor(allData$ID)
allData$AcceptOffer <- as.factor(allData$AcceptOffer)
# block number
allData$framingContext <- NA
allData$framingContext[allData$ReappraisalDirection == "punish"] <- "framing"
allData$framingContext[allData$ReappraisalDirection == "empathy"] <- "framing"
allData$framingContext[allData$ReappraisalDirection == "baseline"] <- "baseline"
# check how many percentage of data is missing
pMiss <- function(x){sum(is.na(x))/length(x)*100}
missingVar <- c('BIS_NONPLAN', 'IIP15INTAMBV', 'EXIT')
missingDF <- allData[, missingVar]
apply(allData[missingVar], 2, pMiss)
print(md.pattern(allData[missingVar]))
# impute data
missingDF_impute <- mice(missingDF, m = 5, meth = "pmm", maxit = 50)
missingVar_complete <- complete(missingDF_impute,1)
# compare with and without missing vars
bis <- missingVar_complete$BIS_NONPLAN - allData$BIS_NONPLAN
iip <- missingVar_complete$IIP15INTAMBV - allData$IIP15INTAMBV
exit <- missingVar_complete$EXIT - allData$EXIT
print(bis)
print(iip)
print(exit)
print(summary(missngVar_complete))
print(missngVar_complete)
print(bis)
print(iip)
print(exit)
print(summary(missingDF_impute))
missingDF_impute$data
missingDF_impute$imp$BIS_NONPLAN
View(missingDF)
View(missingVar_complete)
View(missngVar_complete)
View(allData)
missingVar <- c('BIS_NONPLAN', 'IIP15INTAMBV', 'EXIT')
missingDF <- question[, missingVar]
print(missingDF)
apply(question[missingVar], 2, pMiss)
print(md.pattern(question[missingVar]))
missingDF_impute <- mice(missingDF, m = 5, meth = "pmm", maxit = 50)
print(summary(missingDF_impute))
missingVar_complete <- complete(missingDF_impute,1)
missingVar_complete <- complete(missingDF_impute,1)
print(missingVar_complete)
missingVar <- c('ID', 'BIS_NONPLAN', 'IIP15INTAMBV', 'EXIT')
missingDF <- question[, missingVar]
apply(question[missingVar], 2, pMiss)
print(md.pattern(question[missingVar]))
missingDF_impute <- mice(missingDF, m = 5, meth = "pmm", maxit = 50)
print(summary(missingDF_impute))
print(missingDF_impute)
missingVar_complete <- complete(missingDF_impute,1)
print(missingVar_complete)
bis <- missingVar_complete$BIS_NONPLAN - question$BIS_NONPLAN
iip <- missingVar_complete$IIP15INTAMBV - question$IIP15INTAMBV
exit <- missingVar_complete$EXIT - question$EXIT
print(bis)
print(iip)
print(exit)
print(missingVar_complete)
missingVar_complete <- rename(missingVar_complete, c("BIS_NONPLAN" = "BIS_NONPLAN_full", "IIP15INTAMBV" = "IIP15INTAMBV_full", "EXIT" = "EXIT_full"))
allData <- merge(allData, missingVar_complete, by = "ID")
print(allData$IIP15INTAMBV_full)
print(allData$EXIT)
print(allData$EXIT_full)
print(allData$EXIT)
# import data
#task <- read.csv("/home/kzhang5/scratch/ug_all_task_data.csv")
#demo <- read_excel("/home/kzhang5/scratch/ug_demog.xlsx")
#question <- read_excel("/home/kzhang5/scratch/ug_questionnaire.xlsx")
task <- read.csv("/Users/kezhang/ownCloud/Suicide_UG/UG_clean_updated/ug_all_task_data.csv")
demo <- read_excel("/Users/kezhang/ownCloud/Suicide_UG/UG_clean_updated/ug_demog.xlsx")
question <- read_excel("/Users/kezhang/ownCloud/Suicide_UG/UG_clean_updated/ug_questionnaire.xlsx")
demoQuestion <- merge(demo, question, on = "ID")
allData <- merge(task, demoQuestion, on = "ID")
allData$totalStake <- allData$PlayerProposedAmount + allData$OpponentProposedAmount
allData <- rename(allData, c("HOUSEHOLD INCOME" = "HouseholdIncome", "HRSD NO SUI" = "HRSD_NO_SUI", "PER CAPITA INCOME" = "IncomePerCapita", "MMSE TOTAL" = "MMSE"))
allData$Fairness_score <- as.factor(allData$Fairness_score)
allData$ID <- as.factor(allData$ID)
allData$AcceptOffer <- as.factor(allData$AcceptOffer)
# block number
allData$framingContext <- NA
allData$framingContext[allData$ReappraisalDirection == "punish"] <- "framing"
allData$framingContext[allData$ReappraisalDirection == "empathy"] <- "framing"
allData$framingContext[allData$ReappraisalDirection == "baseline"] <- "baseline"
pMiss <- function(x){sum(is.na(x))/length(x)*100}
missingVar <- c('ID', 'BIS_NONPLAN', 'IIP15INTAMBV', 'EXIT')
missingDF <- question[, missingVar]
apply(question[missingVar], 2, pMiss)
print(md.pattern(question[missingVar]))
# impute data
missingDF_impute <- mice(missingDF, m = 5, meth = "pmm", maxit = 50)
print(summary(missingDF_impute))
missingVar_complete <- complete(missingDF_impute,1)
print(allData$EXIT)
print(missingVar_complete$EXIT)
print(allData$EXIT)
print(missingVar_complete$EXIT)
print(question$EXIT)
print(question$EXIT)
print(missingVar_complete$EXIT)
print(c(question$EXIT, missingVar_complete$EXIT))
df <- data.frame(question$EXIT, missingVar_complete$EXIT))
df <- data.frame(question$EXIT, missingVar_complete$EXIT)
print(df)
print(missingVar_complete)
allData <- merge(allData, missingVar_complete, by = "ID")
missingVar_complete <- rename(missingVar_complete, c("BIS_NONPLAN" = "BIS_NONPLAN_full", "IIP15INTAMBV" = "IIP15INTAMBV_full", "EXIT" = "EXIT_full"))
allData <- merge(allData, missingVar_complete, by = "ID")
print(allData$BIS_NONPLAN_full)
print(allData$framingContext)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
library(lme4)
library(ggplot2)
library(GGally)
library(plyr)
library(Matrix)
library(readxl)
library(reshape2)
library(numDeriv)
library(MuMIn)
library(glmulti)
library(rJava)
summary(m1_1)
